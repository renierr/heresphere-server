name: Build Windows, Linux, and macOS Executables with PyInstaller

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: hserver_windows
            output_file: hserver.exe
          - os: ubuntu-latest
            artifact_name: hserver_linux
            output_file: hserver
          - os: macos-latest
            artifact_name: hserver_macos
            output_file: hserver.app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync
        shell: bash

      - name: Build executable with PyInstaller
        run: |
          uv run pyinstaller ./main.spec
        shell: bash

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.output_file }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: hserver_windows
          path: dist/

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: hserver_linux
          path: dist/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: hserver_macos
          path: dist/

      - name: list files in dist directory
        run: ls -l dist/

      - name: Create Release and Upload Artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/hserver.exe
            dist/hserver
            dist/hserver.app
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
